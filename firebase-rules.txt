// Firestore Rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ผู้ใช้ต้องเข้าสู่ระบบเพื่อเข้าถึงข้อมูล
    match /{document=**} {
      allow read, write: if false; // ปิดการเข้าถึงทั้งหมดเป็นค่าเริ่มต้น
    }
    
    // Bills collection
    match /bills/{billId} {
      // อนุญาตให้อ่านบิลเฉพาะเจ้าของหรือผู้เข้าร่วม
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         existsIn(request.auth.uid, resource.data.participants[*].id) ||
         getParticipantIds().hasAny([request.auth.uid]));
      
      // อนุญาตให้สร้างบิลใหม่เฉพาะผู้ใช้ที่ล็อกอิน และต้องระบุ userId เป็นของตัวเอง
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      
      // อนุญาตให้แก้ไขบิลเฉพาะเจ้าของ
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // อนุญาตให้ลบบิลเฉพาะเจ้าของ
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;

      // ฟังก์ชันช่วยในการตรวจสอบว่า UID อยู่ในรายชื่อผู้เข้าร่วมหรือไม่
      function getParticipantIds() {
        return resource.data.participants.map(p => p.id);
      }
      
      // ฟังก์ชันตรวจสอบว่า ID มีอยู่ในอาร์เรย์หรือไม่
      function existsIn(id, array) {
        return id in array;
      }
    }
    
    // Users collection
    match /users/{userId} {
      // ผู้ใช้สามารถอ่านและแก้ไขข้อมูลของตัวเองเท่านั้น
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Categories collection (public read, admin write)
    match /categories/{categoryId} {
      allow read: if true; // ใครก็สามารถอ่านได้
      allow write: if false; // ไม่อนุญาตให้แก้ไข (ควรทำผ่าน Admin SDK)
    }
    
    // Settings collection (public read, admin write)
    match /settings/{settingId} {
      allow read: if true; // ใครก็สามารถอ่านได้
      allow write: if false; // ไม่อนุญาตให้แก้ไข (ควรทำผ่าน Admin SDK)
    }
  }
} 